# SPDX-FileCopyrightText: 2021 Johannes Hampp <johannes.hampp@zeu.jlug.de>
#
# SPDX-License-Identifier: MIT

configfile: "config/config.yaml"

wildcard_constraints:
    ssp="ssp\d",
    rcp="\d\.\d",
    era_year="\d{4}",
    ssp_year="\d{4}",

# All combinations to create synthetic demands for
rule all:
    input:
        expand("results/{ssp}-{rcp}/{ssp_year}/era5_{era_year}/{region}.nc",
            ssp=["ssp1","ssp2","ssp3","ssp4","ssp5"],
            rcp=["1.9","2.6","3.4","4.5"],
            ssp_year=[2030,2040,2050,2100],
            era_year=[2011,2012,2013,2018],
            region=["Africa", "Asia", "Europe", "NorthAmerica", "SouthAmerica", "Oceania"]
        )

# Download auxiliary datasets
rule download_datasets:
    output:
        # not full list, only some dependencies (proxy other data)
        expand(
            "resources/gegis/{dataset}",
            dataset=[
                "era5monthlysolar.h5",
                "era5monthlywind.h5",
                "timezones.jld",
                "gadm.tif",
                "protected.jld",
                "landcover.jld",
                "SSP v2 Final Energy - Electricity.csv",
            ],
        ),
    script:
        "scripts/download_datasets.jl"

# Download weather data from ERA5 for a specific year
rule download_weather_data:
    output:
        "resources/gegis/era5wind{era_year}.h5",
        "resources/gegis/era5solar{era_year}.h5",
        "resources/gegis/era5temp{era_year}.h5",
    script:
        "scripts/download_weather_data.jl"

rule create_ssp_scenario:
    input:
        # Proxy file for all input files from download_datasets
        "resources/gegis/SSP v2 Final Energy - Electricity.csv",
    output:
        "resources/gegis/population_{ssp_scenario}_{ssp_year}.jld",
        "resources/gegis/gdp_{ssp}_{ssp_year}.jld",
    script:
        "scripts/create_ssp_scenario.jl"

# Create the region based on areas from GADM
rule create_region:
    input:
        gadm="resources/gegis/gadm.tif",
        region_definitions="config/regions.yaml",
    output:
        "resources/gegis/regions_{region}.jld",
    script:
        "scripts/create_region.jl"


# Generate synthetic electricity demand
# for a region/weather base year/SSP scenario/RCP scenario/SSP year
rule create_synthetic_demand:
    input:
        "resources/gegis/regions_{region}.jld",
        "resources/gegis/era5temp{era_year}.h5",
        "resources/gegis/population_{ssp}_{ssp_year}.jld",
        "resources/gegis/gdp_{ssp}_{ssp_year}.jld",
    output:
        "resources/syn_demand/{ssp}-{rcp}/{ssp_year}/{era_year}/{region}.jld",
    script:
        "scripts/synthesize_demand.jl"


rule convert_to_output_format:
    input:
        demand="resources/syn_demand/{ssp}-{rcp}/{ssp_year}/{era_year}/{region}.jld",
        region_definitions="config/regions.yaml",
    output:
        csv="results/{ssp}-{rcp}/{ssp_year}/era5_{era_year}/{region}.csv",
        netcdf="results/{ssp}-{rcp}/{ssp_year}/era5_{era_year}/{region}.nc",
    notebook:
        "notebooks/convert_to_output_format.py.ipynb"
